# coding: utf-8

"""
    Books API

    The Books API provides information about book reviews and The New York Times Best Sellers lists.  ## Best Sellers Lists Services ### List Names The lists/names service returns a list of all the NYT Best Sellers Lists.  Some lists are published weekly and others monthly.  The response includes when each list was first published and last published.  ``` /lists/names.json ```  ### List Data  The lists/{date}/{name} service returns the books on the best sellers list for the specified date and list name.  ``` /lists/2019-01-20/hardcover-fiction.json ```  Use \"current\" for {date} to get the latest list. ``` /lists/current/hardcover-fiction.json ```  ## Book Reviews Services  The book reviews service lets you get NYT book review by author, ISBN, or title.  ``` /reviews.json?author=Michelle+Obama ```  ``` /reviews.json?isbn=9781524763138 ```  ``` /reviews.json?title=Becoming ```  ## Example Calls  ``` https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=yourkey ```  ``` https://api.nytimes.com/svc/books/v3/reviews.json?author=Stephen+King&api-key=yourkey ``` 

    The version of the OpenAPI document: 3.0.0
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from nytimes_python_sdk import schemas  # noqa: F401


class OverviewResponseResultsListsItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            list_id = schemas.IntSchema
            list_name = schemas.StrSchema
            display_name = schemas.StrSchema
            updated = schemas.StrSchema
            list_image = schemas.StrSchema
        
            @staticmethod
            def books() -> typing.Type['OverviewResponseResultsListsItemBooks']:
                return OverviewResponseResultsListsItemBooks
            __annotations__ = {
                "list_id": list_id,
                "list_name": list_name,
                "display_name": display_name,
                "updated": updated,
                "list_image": list_image,
                "books": books,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["list_id"]) -> MetaOapg.properties.list_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["list_name"]) -> MetaOapg.properties.list_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["display_name"]) -> MetaOapg.properties.display_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updated"]) -> MetaOapg.properties.updated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["list_image"]) -> MetaOapg.properties.list_image: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["books"]) -> 'OverviewResponseResultsListsItemBooks': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["list_id", "list_name", "display_name", "updated", "list_image", "books", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["list_id"]) -> typing.Union[MetaOapg.properties.list_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["list_name"]) -> typing.Union[MetaOapg.properties.list_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["display_name"]) -> typing.Union[MetaOapg.properties.display_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updated"]) -> typing.Union[MetaOapg.properties.updated, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["list_image"]) -> typing.Union[MetaOapg.properties.list_image, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["books"]) -> typing.Union['OverviewResponseResultsListsItemBooks', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["list_id", "list_name", "display_name", "updated", "list_image", "books", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        list_id: typing.Union[MetaOapg.properties.list_id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        list_name: typing.Union[MetaOapg.properties.list_name, str, schemas.Unset] = schemas.unset,
        display_name: typing.Union[MetaOapg.properties.display_name, str, schemas.Unset] = schemas.unset,
        updated: typing.Union[MetaOapg.properties.updated, str, schemas.Unset] = schemas.unset,
        list_image: typing.Union[MetaOapg.properties.list_image, str, schemas.Unset] = schemas.unset,
        books: typing.Union['OverviewResponseResultsListsItemBooks', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'OverviewResponseResultsListsItem':
        return super().__new__(
            cls,
            *args,
            list_id=list_id,
            list_name=list_name,
            display_name=display_name,
            updated=updated,
            list_image=list_image,
            books=books,
            _configuration=_configuration,
            **kwargs,
        )

from nytimes_python_sdk.model.overview_response_results_lists_item_books import OverviewResponseResultsListsItemBooks
